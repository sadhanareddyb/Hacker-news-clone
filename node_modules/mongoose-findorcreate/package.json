{
  "_from": "mongoose-findorcreate",
  "_id": "mongoose-findorcreate@3.0.0",
  "_inBundle": false,
  "_integrity": "sha512-kQhDe5XDj6tMv8kq1wjK+hITGIGUl60rj8oGLupF9poNsqIDkAJBXudZKcCdSyBZ7p6DLK2+0jSBthrb26tSYQ==",
  "_location": "/mongoose-findorcreate",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mongoose-findorcreate",
    "fetchSpec": "latest",
    "name": "mongoose-findorcreate",
    "raw": "mongoose-findorcreate",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mongoose-findorcreate/-/mongoose-findorcreate-3.0.0.tgz",
  "_shasum": "490acf67c16061de74f7d1b92906538a62554a6d",
  "_spec": "mongoose-findorcreate",
  "_where": "/Users/angelayu/Desktop/Secrets",
  "author": {
    "email": "nick@penree.com",
    "name": "Nicholas Penree"
  },
  "bugs": {
    "url": "https://github.com/drudge/mongoose-findorcreate/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Mongoose plugin that adds findOrCreate",
  "devDependencies": {
    "mocha": ">= 2.0.0",
    "mongoose": ">= 3.0",
    "should": ">= 0.2.1"
  },
  "engine": {
    "node": ">= 4.0"
  },
  "homepage": "https://github.com/drudge/mongoose-findorcreate#readme",
  "keywords": [
    "findOrCreate",
    "mongodb",
    "mongoose",
    "plugin"
  ],
  "license": "MIT",
  "name": "mongoose-findorcreate",
  "optionalDependencies": {},
  "readme": "Mongoose findOrCreate Plugin [![Build Status](https://secure.travis-ci.org/drudge/mongoose-findorcreate.png?branch=master)](https://travis-ci.org/drudge/mongoose-findorcreate)\n============================\n\nSimple plugin for [Mongoose](https://github.com/LearnBoost/mongoose) which adds\na findOrCreate method to models. This is useful for libraries like\n[Passport](http://passportjs.org) which require it.\n\n## Installation\n\n`npm install mongoose-findorcreate`\n\n## Usage\n\n```javascript\nvar findOrCreate = require('mongoose-findorcreate')\nvar ClickSchema = new Schema({ ... });\nClickSchema.plugin(findOrCreate);\nvar Click = mongoose.model('Click', ClickSchema);\n```\n\nThe Click model now has a findOrCreate static method\n\n```javascript\nClick.findOrCreate({ip: '127.0.0.1'}, function(err, click, created) {\n  // created will be true here\n  console.log('A new click from \"%s\" was inserted', click.ip);\n  Click.findOrCreate({}, function(err, click, created) {\n    // created will be false here\n    console.log('Did not create a new click for \"%s\"', click.ip);\n  })\n});\n```\n\nYou can also include properties that aren't used in the\nfind call, but will be added to the object if it is created.\n\n```javascript\nClick.create({ip: '127.0.0.1'}, {browser: 'Mozilla'}, function(err, val) {\n  Click.findOrCreate({ip: '127.0.0.1'}, {browser: 'Chrome'}, function(err, click) {\n    console.log('A click from \"%s\" using \"%s\" was found', click.ip, click.browser);\n    // prints A click from \"127.0.0.1\" using \"Mozilla\" was found\n  })\n});\n```\n\n### Promise Support\n\nChoose your Promise library by setting\n[`Mongoose.Promise`](http://mongoosejs.com/docs/promises.html).\n\nThe returned `Promise` shall resolve to an object with keys `doc` and\n`created` on success. It shall be rejected with `err` on failure.\n\n```javascript\n// Use environment-provided Promise (necessary to silence a Mongoose warning).\nmongoose.Promise = Promise;\n// To a findOrCreate().\nClick.findOrCreate({ip: '127.0.0.2'}).then(function (result) {\n  click = result.doc;\n  console.log('A click from', click.ip, ' using ', click.browser, ' was ', click.created ? 'created' : 'found');\n})\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012-2017 Nicholas Penree &lt;nick@penree.com&gt;\n\nBased on [supergoose](https://github.com/jamplify/supergoose): Copyright (c) 2012 Jamplify\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/drudge/mongoose-findorcreate.git"
  },
  "scripts": {
    "test": "mocha -u bdd -R spec -c ./test/*test.js"
  },
  "version": "3.0.0"
}
